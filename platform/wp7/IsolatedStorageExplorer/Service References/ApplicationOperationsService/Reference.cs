//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace IsolatedStorageExplorer.ApplicationOperationsService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operation", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations")]
    public partial class Operation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid ApplicationSessionIdField;
        
        private System.Guid ClientSessionIdField;
        
        private System.Guid IdField;
        
        private System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.RequestBase> OperationsToExecuteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ApplicationSessionId {
            get {
                return this.ApplicationSessionIdField;
            }
            set {
                if ((this.ApplicationSessionIdField.Equals(value) != true)) {
                    this.ApplicationSessionIdField = value;
                    this.RaisePropertyChanged("ApplicationSessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientSessionId {
            get {
                return this.ClientSessionIdField;
            }
            set {
                if ((this.ClientSessionIdField.Equals(value) != true)) {
                    this.ClientSessionIdField = value;
                    this.RaisePropertyChanged("ClientSessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.RequestBase> OperationsToExecute {
            get {
                return this.OperationsToExecuteField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationsToExecuteField, value) != true)) {
                    this.OperationsToExecuteField = value;
                    this.RaisePropertyChanged("OperationsToExecute");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBase", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.DeleteFileRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.DownloadFileRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.UploadFileRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.CreateDirectoryRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.DeleteDirectoryRequest))]
    public partial class RequestBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteFileRequest", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations")]
    public partial class DeleteFileRequest : IsolatedStorageExplorer.ApplicationOperationsService.RequestBase {
        
        private string FilePathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadFileRequest", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations.Requests")]
    public partial class DownloadFileRequest : IsolatedStorageExplorer.ApplicationOperationsService.RequestBase {
        
        private System.Guid DownloadStreamIdField;
        
        private string FilePathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DownloadStreamId {
            get {
                return this.DownloadStreamIdField;
            }
            set {
                if ((this.DownloadStreamIdField.Equals(value) != true)) {
                    this.DownloadStreamIdField = value;
                    this.RaisePropertyChanged("DownloadStreamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadFileRequest", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations.Requests")]
    public partial class UploadFileRequest : IsolatedStorageExplorer.ApplicationOperationsService.RequestBase {
        
        private string FilePathField;
        
        private System.Guid UploadStreamIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UploadStreamId {
            get {
                return this.UploadStreamIdField;
            }
            set {
                if ((this.UploadStreamIdField.Equals(value) != true)) {
                    this.UploadStreamIdField = value;
                    this.RaisePropertyChanged("UploadStreamId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateDirectoryRequest", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations.Requests")]
    public partial class CreateDirectoryRequest : IsolatedStorageExplorer.ApplicationOperationsService.RequestBase {
        
        private string DirectoryPathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectoryPath {
            get {
                return this.DirectoryPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoryPathField, value) != true)) {
                    this.DirectoryPathField = value;
                    this.RaisePropertyChanged("DirectoryPath");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteDirectoryRequest", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations.Requests")]
    public partial class DeleteDirectoryRequest : IsolatedStorageExplorer.ApplicationOperationsService.RequestBase {
        
        private string DirectoryPathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectoryPath {
            get {
                return this.DirectoryPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoryPathField, value) != true)) {
                    this.DirectoryPathField = value;
                    this.RaisePropertyChanged("DirectoryPath");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationProgress", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations.OperationProgress")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.OperationCompleted))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.OperationCanceled))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.OperationFailedDueToException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.OperationReceived))]
    public partial class OperationProgress : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid OperationIdField;
        
        private int TotalProgressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OperationId {
            get {
                return this.OperationIdField;
            }
            set {
                if ((this.OperationIdField.Equals(value) != true)) {
                    this.OperationIdField = value;
                    this.RaisePropertyChanged("OperationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalProgress {
            get {
                return this.TotalProgressField;
            }
            set {
                if ((this.TotalProgressField.Equals(value) != true)) {
                    this.TotalProgressField = value;
                    this.RaisePropertyChanged("TotalProgress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationCompleted", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations.OperationProgress")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(IsolatedStorageExplorer.ApplicationOperationsService.OperationCanceled))]
    public partial class OperationCompleted : IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress {
        
        private IsolatedStorageExplorer.ApplicationOperationsService.IsolatedStorageInformation NewIsolatedStorageInformationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IsolatedStorageExplorer.ApplicationOperationsService.IsolatedStorageInformation NewIsolatedStorageInformation {
            get {
                return this.NewIsolatedStorageInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.NewIsolatedStorageInformationField, value) != true)) {
                    this.NewIsolatedStorageInformationField = value;
                    this.RaisePropertyChanged("NewIsolatedStorageInformation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationCanceled", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations.OperationProgress")]
    public partial class OperationCanceled : IsolatedStorageExplorer.ApplicationOperationsService.OperationCompleted {
        
        private System.DateTime CancelTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CancelTime {
            get {
                return this.CancelTimeField;
            }
            set {
                if ((this.CancelTimeField.Equals(value) != true)) {
                    this.CancelTimeField = value;
                    this.RaisePropertyChanged("CancelTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationFailedDueToException", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations.OperationProgress")]
    public partial class OperationFailedDueToException : IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress {
        
        private string ExceptionMessageField;
        
        private System.Guid FailedRequestIdField;
        
        private IsolatedStorageExplorer.ApplicationOperationsService.IsolatedStorageInformation NewIsolatedStorageInformationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FailedRequestId {
            get {
                return this.FailedRequestIdField;
            }
            set {
                if ((this.FailedRequestIdField.Equals(value) != true)) {
                    this.FailedRequestIdField = value;
                    this.RaisePropertyChanged("FailedRequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IsolatedStorageExplorer.ApplicationOperationsService.IsolatedStorageInformation NewIsolatedStorageInformation {
            get {
                return this.NewIsolatedStorageInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.NewIsolatedStorageInformationField, value) != true)) {
                    this.NewIsolatedStorageInformationField = value;
                    this.RaisePropertyChanged("NewIsolatedStorageInformation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationReceived", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts.Oper" +
        "ations.OperationProgress")]
    public partial class OperationReceived : IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress {
        
        private System.DateTime ReceiveTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceiveTime {
            get {
                return this.ReceiveTimeField;
            }
            set {
                if ((this.ReceiveTimeField.Equals(value) != true)) {
                    this.ReceiveTimeField = value;
                    this.RaisePropertyChanged("ReceiveTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IsolatedStorageInformation", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts")]
    public partial class IsolatedStorageInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long AvailableSpaceField;
        
        private System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.DirectoryInformation> DirectoriesField;
        
        private System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.FileInformation> FilesField;
        
        private long QuotaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AvailableSpace {
            get {
                return this.AvailableSpaceField;
            }
            set {
                if ((this.AvailableSpaceField.Equals(value) != true)) {
                    this.AvailableSpaceField = value;
                    this.RaisePropertyChanged("AvailableSpace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.DirectoryInformation> Directories {
            get {
                return this.DirectoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoriesField, value) != true)) {
                    this.DirectoriesField = value;
                    this.RaisePropertyChanged("Directories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.FileInformation> Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Quota {
            get {
                return this.QuotaField;
            }
            set {
                if ((this.QuotaField.Equals(value) != true)) {
                    this.QuotaField = value;
                    this.RaisePropertyChanged("Quota");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectoryInformation", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts")]
    public partial class DirectoryInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.DirectoryInformation> DirectoriesField;
        
        private System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.FileInformation> FilesField;
        
        private string NameField;
        
        private string PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.DirectoryInformation> Directories {
            get {
                return this.DirectoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoriesField, value) != true)) {
                    this.DirectoriesField = value;
                    this.RaisePropertyChanged("Directories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<IsolatedStorageExplorer.ApplicationOperationsService.FileInformation> Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInformation", Namespace="http://schemas.datacontract.org/2004/07/ExplorerService.Common.DataContracts")]
    public partial class FileInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExtensionField;
        
        private string FileNameField;
        
        private string PathField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension {
            get {
                return this.ExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionField, value) != true)) {
                    this.ExtensionField = value;
                    this.RaisePropertyChanged("Extension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ApplicationOperationsService.IApplicationOperationsService")]
    public interface IApplicationOperationsService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplicationOperationsService/GetNextOperation", ReplyAction="http://tempuri.org/IApplicationOperationsService/GetNextOperationResponse")]
        System.IAsyncResult BeginGetNextOperation(System.Guid applicationSessionId, System.AsyncCallback callback, object asyncState);
        
        IsolatedStorageExplorer.ApplicationOperationsService.Operation EndGetNextOperation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplicationOperationsService/PostOperationProgress", ReplyAction="http://tempuri.org/IApplicationOperationsService/PostOperationProgressResponse")]
        System.IAsyncResult BeginPostOperationProgress(System.Guid applicationSessionId, IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress operationProgress, System.AsyncCallback callback, object asyncState);
        
        bool EndPostOperationProgress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IApplicationOperationsService/CancelPending", ReplyAction="http://tempuri.org/IApplicationOperationsService/CancelPendingResponse")]
        System.IAsyncResult BeginCancelPending(System.Guid applicationSessionId, System.Guid operationId, System.AsyncCallback callback, object asyncState);
        
        bool EndCancelPending(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationOperationsServiceChannel : IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNextOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNextOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public IsolatedStorageExplorer.ApplicationOperationsService.Operation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((IsolatedStorageExplorer.ApplicationOperationsService.Operation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostOperationProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostOperationProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CancelPendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CancelPendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationOperationsServiceClient : System.ServiceModel.ClientBase<IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService>, IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService {
        
        private BeginOperationDelegate onBeginGetNextOperationDelegate;
        
        private EndOperationDelegate onEndGetNextOperationDelegate;
        
        private System.Threading.SendOrPostCallback onGetNextOperationCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostOperationProgressDelegate;
        
        private EndOperationDelegate onEndPostOperationProgressDelegate;
        
        private System.Threading.SendOrPostCallback onPostOperationProgressCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelPendingDelegate;
        
        private EndOperationDelegate onEndCancelPendingDelegate;
        
        private System.Threading.SendOrPostCallback onCancelPendingCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ApplicationOperationsServiceClient() {
        }
        
        public ApplicationOperationsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationOperationsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationOperationsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationOperationsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetNextOperationCompletedEventArgs> GetNextOperationCompleted;
        
        public event System.EventHandler<PostOperationProgressCompletedEventArgs> PostOperationProgressCompleted;
        
        public event System.EventHandler<CancelPendingCompletedEventArgs> CancelPendingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService.BeginGetNextOperation(System.Guid applicationSessionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNextOperation(applicationSessionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IsolatedStorageExplorer.ApplicationOperationsService.Operation IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService.EndGetNextOperation(System.IAsyncResult result) {
            return base.Channel.EndGetNextOperation(result);
        }
        
        private System.IAsyncResult OnBeginGetNextOperation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid applicationSessionId = ((System.Guid)(inValues[0]));
            return ((IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService)(this)).BeginGetNextOperation(applicationSessionId, callback, asyncState);
        }
        
        private object[] OnEndGetNextOperation(System.IAsyncResult result) {
            IsolatedStorageExplorer.ApplicationOperationsService.Operation retVal = ((IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService)(this)).EndGetNextOperation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNextOperationCompleted(object state) {
            if ((this.GetNextOperationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNextOperationCompleted(this, new GetNextOperationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNextOperationAsync(System.Guid applicationSessionId) {
            this.GetNextOperationAsync(applicationSessionId, null);
        }
        
        public void GetNextOperationAsync(System.Guid applicationSessionId, object userState) {
            if ((this.onBeginGetNextOperationDelegate == null)) {
                this.onBeginGetNextOperationDelegate = new BeginOperationDelegate(this.OnBeginGetNextOperation);
            }
            if ((this.onEndGetNextOperationDelegate == null)) {
                this.onEndGetNextOperationDelegate = new EndOperationDelegate(this.OnEndGetNextOperation);
            }
            if ((this.onGetNextOperationCompletedDelegate == null)) {
                this.onGetNextOperationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextOperationCompleted);
            }
            base.InvokeAsync(this.onBeginGetNextOperationDelegate, new object[] {
                        applicationSessionId}, this.onEndGetNextOperationDelegate, this.onGetNextOperationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService.BeginPostOperationProgress(System.Guid applicationSessionId, IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress operationProgress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostOperationProgress(applicationSessionId, operationProgress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService.EndPostOperationProgress(System.IAsyncResult result) {
            return base.Channel.EndPostOperationProgress(result);
        }
        
        private System.IAsyncResult OnBeginPostOperationProgress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid applicationSessionId = ((System.Guid)(inValues[0]));
            IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress operationProgress = ((IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress)(inValues[1]));
            return ((IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService)(this)).BeginPostOperationProgress(applicationSessionId, operationProgress, callback, asyncState);
        }
        
        private object[] OnEndPostOperationProgress(System.IAsyncResult result) {
            bool retVal = ((IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService)(this)).EndPostOperationProgress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPostOperationProgressCompleted(object state) {
            if ((this.PostOperationProgressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostOperationProgressCompleted(this, new PostOperationProgressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostOperationProgressAsync(System.Guid applicationSessionId, IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress operationProgress) {
            this.PostOperationProgressAsync(applicationSessionId, operationProgress, null);
        }
        
        public void PostOperationProgressAsync(System.Guid applicationSessionId, IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress operationProgress, object userState) {
            if ((this.onBeginPostOperationProgressDelegate == null)) {
                this.onBeginPostOperationProgressDelegate = new BeginOperationDelegate(this.OnBeginPostOperationProgress);
            }
            if ((this.onEndPostOperationProgressDelegate == null)) {
                this.onEndPostOperationProgressDelegate = new EndOperationDelegate(this.OnEndPostOperationProgress);
            }
            if ((this.onPostOperationProgressCompletedDelegate == null)) {
                this.onPostOperationProgressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostOperationProgressCompleted);
            }
            base.InvokeAsync(this.onBeginPostOperationProgressDelegate, new object[] {
                        applicationSessionId,
                        operationProgress}, this.onEndPostOperationProgressDelegate, this.onPostOperationProgressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService.BeginCancelPending(System.Guid applicationSessionId, System.Guid operationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelPending(applicationSessionId, operationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService.EndCancelPending(System.IAsyncResult result) {
            return base.Channel.EndCancelPending(result);
        }
        
        private System.IAsyncResult OnBeginCancelPending(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid applicationSessionId = ((System.Guid)(inValues[0]));
            System.Guid operationId = ((System.Guid)(inValues[1]));
            return ((IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService)(this)).BeginCancelPending(applicationSessionId, operationId, callback, asyncState);
        }
        
        private object[] OnEndCancelPending(System.IAsyncResult result) {
            bool retVal = ((IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService)(this)).EndCancelPending(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCancelPendingCompleted(object state) {
            if ((this.CancelPendingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelPendingCompleted(this, new CancelPendingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelPendingAsync(System.Guid applicationSessionId, System.Guid operationId) {
            this.CancelPendingAsync(applicationSessionId, operationId, null);
        }
        
        public void CancelPendingAsync(System.Guid applicationSessionId, System.Guid operationId, object userState) {
            if ((this.onBeginCancelPendingDelegate == null)) {
                this.onBeginCancelPendingDelegate = new BeginOperationDelegate(this.OnBeginCancelPending);
            }
            if ((this.onEndCancelPendingDelegate == null)) {
                this.onEndCancelPendingDelegate = new EndOperationDelegate(this.OnEndCancelPending);
            }
            if ((this.onCancelPendingCompletedDelegate == null)) {
                this.onCancelPendingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelPendingCompleted);
            }
            base.InvokeAsync(this.onBeginCancelPendingDelegate, new object[] {
                        applicationSessionId,
                        operationId}, this.onEndCancelPendingDelegate, this.onCancelPendingCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService CreateChannel() {
            return new ApplicationOperationsServiceClientChannel(this);
        }
        
        private class ApplicationOperationsServiceClientChannel : ChannelBase<IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService>, IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService {
            
            public ApplicationOperationsServiceClientChannel(System.ServiceModel.ClientBase<IsolatedStorageExplorer.ApplicationOperationsService.IApplicationOperationsService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetNextOperation(System.Guid applicationSessionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = applicationSessionId;
                System.IAsyncResult _result = base.BeginInvoke("GetNextOperation", _args, callback, asyncState);
                return _result;
            }
            
            public IsolatedStorageExplorer.ApplicationOperationsService.Operation EndGetNextOperation(System.IAsyncResult result) {
                object[] _args = new object[0];
                IsolatedStorageExplorer.ApplicationOperationsService.Operation _result = ((IsolatedStorageExplorer.ApplicationOperationsService.Operation)(base.EndInvoke("GetNextOperation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPostOperationProgress(System.Guid applicationSessionId, IsolatedStorageExplorer.ApplicationOperationsService.OperationProgress operationProgress, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = applicationSessionId;
                _args[1] = operationProgress;
                System.IAsyncResult _result = base.BeginInvoke("PostOperationProgress", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndPostOperationProgress(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("PostOperationProgress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCancelPending(System.Guid applicationSessionId, System.Guid operationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = applicationSessionId;
                _args[1] = operationId;
                System.IAsyncResult _result = base.BeginInvoke("CancelPending", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCancelPending(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CancelPending", _args, result)));
                return _result;
            }
        }
    }
}
