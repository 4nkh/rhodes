# Alert API - Popup, Vibrate, Play for System Alerts

The [Alert Class API](http://docs.rhomobile.com/rhodes/device-caps#alerts) lets you call system alert methods for popup, vibrate, or playing audio files.

## Alert.show_popup "message"

Alert.show_popup( { :message, :title, :icon, :buttons, :callback } )

Bring the application up front and show a popup message.

### Returns

Nil.

### Parameters

:message – text to be displayed in popup window
:title – title of the popup window
:icon – image to be displayed in popup window. Its value can be one of the following predefined values, or a path to an image file.
 * :alert – ‘!’ icon
 * :question – ‘?’ icon
 * :info – informational icon
:buttons – array of buttons for popup window. Each button defined by its id and title. Button can be specified by Hash with :id and :title keys or just String – in this case both id and title will be set to this value.
:callback – url to be called when any of the button will be clicked. This callback will be called with @params hash containing three keys: :button_id, :button_title and :button_index.

#### Example

	:::ruby
	Alert.show_popup( {
    	  :message => 'Some message', 
	  :title => 'Custom title', 
	  :icon => '/public/images/icon.png',
	  :buttons => ["Yes", "No", 
	    {:id => 'cancel', :title => 'Cancel all'}],
	    :callback => url_for(:action => :on_dissmiss_popup) } )

### Alert.hide_popup

Closes the current popup window.

### Returns

None.

## Alert.vibrate(duration_in_milliseconds)

Vibrate the device.

### Returns

None.

### Parameters

duration_in_milliseconds - vibrate for the specified number of milliseconds, up to 25500; if 0 or no duration is specified, it will vibrate for 2500 millisecond.

### Example

	:::ruby
	Alert.vibrate(2000)

## Alert.play_file(file_name.ext, media_type)

Play the specified file if the media type is supported by the phone. The file should be included in the application. For example, if file is in public folder, file name will be /apps/public/test-file.mp3. 

### Returns

None.

### Parameters

file_name.ext - The path to the file name, ending in the file name and extension.

media_type - Media type can be specified explicitly, or can be recognized from the file extension. Known file extensions are:
 * .mp3 – audio/mpeg
 * .wav – audio/x-wav

## Alert.show_status(title, status_text, hide_button_label)

Show status messages. The status window will close after clicking on hide button.

### Returns

None.

### Parameters

status_text – text to be displayed in status window
hide_button_label – label of hide button

### Example

	:::ruby
	def sync_notify
	  status = @params['status'] ? @params['status'] : ""
	  Alert.show_status( 
	    "Status", 
	    "#{@params['source_name']} : #{status}", 
	    Rho::RhoMessages.get_message('hide'))
	end


